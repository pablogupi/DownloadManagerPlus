apply plugin: 'com.android.library'
//apply plugin: 'com.novoda.bintray-release'
group = GROUP as String

android {

    defaultConfig {
        namespace("ir.siaray.downloadmanagerplus")
        compileSdk COMPILE_SDK_VERSION as int
        buildToolsVersion BUILD_TOOLS_VERSION as String
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility "17"
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        buildConfig true
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.annotation:annotation:1.9.1"
    implementation 'com.pnikosis:materialish-progress:1.7'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

}

/*publish {
    userOrg = USER_NAME as String
    groupId = GROUP as String
    artifactId = LIBRARY_ARTIFACT_ID as String
    uploadName = UPLOAD_NAME as String
    publishVersion = LIBRARY_VERSION_NAME as String
    desc = LIBRARY_DESCRIPTION as String
    website = GITHUB_URL as String
    issueTracker = ISSUE_TRACKER as String
}*/

/*def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def getVersionName = { ->
    return LIBRARY_VERSION_NAME  // Replace with version Name
}

def getArtificatId = { ->
    return LIBRARY_ARTIFACT_ID // Replace with library name ID
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId GROUP as String// Replace with group ID
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"

            url = uri("https://maven.pkg.github.com/SIARAY/DownloadManagerPlus")

            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }

}*/

tasks.register('sourcesJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

tasks.register('javadoc', Javadoc) {
    options.charSet = 'UTF-8'
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}